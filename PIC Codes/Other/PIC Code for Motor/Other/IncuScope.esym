C L "DriveMotor" 0 43 1 "FUNCTION"
D G "__PCH__" 0 206 ""4.045""
D G "__DEVICE__" 0 206 "2455"
D G "__DATE__" 0 206 ""20-Jan-12""
D G "__TIME__" 0 206 ""16:56:20"" "IncuScope.c"
d G "PIN_A0" 1 27 "31744"
d G "PIN_A1" 1 28 "31745"
d G "PIN_A2" 1 29 "31746"
d G "PIN_A3" 1 30 "31747"
d G "PIN_A4" 1 31 "31748"
d G "PIN_A5" 1 32 "31749"
d G "PIN_A6" 1 33 "31750"
d G "PIN_A7" 1 34 "31751"
d G "PIN_B0" 1 36 "31752"
d G "PIN_B1" 1 37 "31753"
d G "PIN_B2" 1 38 "31754"
d G "PIN_B3" 1 39 "31755"
d G "PIN_B4" 1 40 "31756"
d G "PIN_B5" 1 41 "31757"
d G "PIN_B6" 1 42 "31758"
d G "PIN_B7" 1 43 "31759"
d G "PIN_C0" 1 45 "31760"
d G "PIN_C1" 1 46 "31761"
d G "PIN_C2" 1 47 "31762"
d G "PIN_C3" 1 48 "31763"
d G "PIN_C4" 1 49 "31764"
d G "PIN_C5" 1 50 "31765"
d G "PIN_C6" 1 51 "31766"
d G "PIN_C7" 1 52 "31767"
d G "PIN_E3" 1 54 "31779"
d G "FALSE" 1 57 "0"
d G "TRUE" 1 58 "1"
d G "BYTE" 1 60 "int"
d G "BOOLEAN" 1 61 "short int"
d G "getc" 1 63 "getch"
d G "fgetc" 1 64 "getch"
d G "getchar" 1 65 "getch"
d G "putc" 1 66 "putchar"
d G "fputc" 1 67 "putchar"
d G "fgets" 1 68 "gets"
d G "fputs" 1 69 "puts"
d G "WDT_TIMEOUT" 1 75 "7"
d G "MCLR_FROM_SLEEP" 1 76 "11"
d G "MCLR_FROM_RUN" 1 77 "15"
d G "NORMAL_POWER_UP" 1 78 "12"
d G "BROWNOUT_RESTART" 1 79 "14"
d G "WDT_FROM_SLEEP" 1 80 "3"
d G "RESET_INSTRUCTION" 1 81 "0"
d G "RTCC_INTERNAL" 1 88 "0"
d G "RTCC_EXT_L_TO_H" 1 89 "32"
d G "RTCC_EXT_H_TO_L" 1 90 "48"
d G "RTCC_DIV_1" 1 92 "8"
d G "RTCC_DIV_2" 1 93 "0"
d G "RTCC_DIV_4" 1 94 "1"
d G "RTCC_DIV_8" 1 95 "2"
d G "RTCC_DIV_16" 1 96 "3"
d G "RTCC_DIV_32" 1 97 "4"
d G "RTCC_DIV_64" 1 98 "5"
d G "RTCC_DIV_128" 1 99 "6"
d G "RTCC_DIV_256" 1 100 "7"
d G "RTCC_OFF" 1 102 "0x80"
d G "RTCC_8_BIT" 1 104 "0x40"
d G "WDT_ON" 1 114 "0x100"
d G "WDT_OFF" 1 115 "0"
d G "T1_DISABLED" 1 121 "0"
d G "T1_INTERNAL" 1 122 "0x85"
d G "T1_EXTERNAL" 1 123 "0x87"
d G "T1_EXTERNAL_SYNC" 1 124 "0x83"
d G "T1_CLK_OUT" 1 126 "8"
d G "T1_DIV_BY_1" 1 128 "0"
d G "T1_DIV_BY_2" 1 129 "0x10"
d G "T1_DIV_BY_4" 1 130 "0x20"
d G "T1_DIV_BY_8" 1 131 "0x30"
d G "T2_DISABLED" 1 136 "0"
d G "T2_DIV_BY_1" 1 137 "4"
d G "T2_DIV_BY_4" 1 138 "5"
d G "T2_DIV_BY_16" 1 139 "6"
d G "T3_DISABLED" 1 145 "0"
d G "T3_INTERNAL" 1 146 "0x85"
d G "T3_EXTERNAL" 1 147 "0x87"
d G "T3_EXTERNAL_SYNC" 1 148 "0x83"
d G "T3_DIV_BY_1" 1 150 "0"
d G "T3_DIV_BY_2" 1 151 "0x10"
d G "T3_DIV_BY_4" 1 152 "0x20"
d G "T3_DIV_BY_8" 1 153 "0x30"
d G "CCP_OFF" 1 159 "0"
d G "CCP_CAPTURE_FE" 1 160 "4"
d G "CCP_CAPTURE_RE" 1 161 "5"
d G "CCP_CAPTURE_DIV_4" 1 162 "6"
d G "CCP_CAPTURE_DIV_16" 1 163 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 164 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 165 "9"
d G "CCP_COMPARE_INT" 1 166 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 167 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 168 "0xB"
d G "CCP_PWM" 1 169 "0xC"
d G "CCP_PWM_PLUS_1" 1 170 "0x1c"
d G "CCP_PWM_PLUS_2" 1 171 "0x2c"
d G "CCP_PWM_PLUS_3" 1 172 "0x3c"
d G "CCP_USE_TIMER3" 1 173 "0x100"
v G "CCP_1" 1 174 "int16"
v G "CCP_2" 1 178 "int16"
d G "SPI_MASTER" 1 185 "0x20"
d G "SPI_SLAVE" 1 186 "0x24"
d G "SPI_L_TO_H" 1 187 "0"
d G "SPI_H_TO_L" 1 188 "0x10"
d G "SPI_CLK_DIV_4" 1 189 "0"
d G "SPI_CLK_DIV_16" 1 190 "1"
d G "SPI_CLK_DIV_64" 1 191 "2"
d G "SPI_CLK_T2" 1 192 "3"
d G "SPI_SS_DISABLED" 1 193 "1"
d G "SPI_SAMPLE_AT_END" 1 195 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 196 "0x4000"
d G "UART_ADDRESS" 1 202 "2"
d G "UART_DATA" 1 203 "4"
d G "UART_AUTODETECT" 1 204 "8"
d G "UART_AUTODETECT_NOWAIT" 1 205 "9"
d G "UART_WAKEUP_ON_RDA" 1 206 "10"
d G "UART_SEND_BREAK" 1 207 "13"
d G "A0_A3_A1_A3" 1 211 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 212 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 213 "0xbcf05"
d G "NC_NC_NC_NC" 1 214 "0x0ff07"
d G "A0_A3_A1_A2" 1 215 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 216 "0x9ef01"
d G "A0_VR_A1_VR" 1 217 "0x3ff06"
d G "A3_VR_A2_VR" 1 218 "0xcff0e"
d G "CP1_INVERT" 1 219 "0x0000010"
d G "CP2_INVERT" 1 220 "0x0000020"
d G "VREF_LOW" 1 228 "0xa0"
d G "VREF_HIGH" 1 229 "0x80"
d G "VREF_F5" 1 231 "0x40"
d G "VREF_COMP" 1 232 "0x10"
d G "LVD_LVDIN" 1 237 "0x1F"
d G "LVD_45" 1 238 "0x1E"
d G "LVD_42" 1 239 "0x1D"
d G "LVD_40" 1 240 "0x1C"
d G "LVD_38" 1 241 "0x1B"
d G "LVD_36" 1 242 "0x1A"
d G "LVD_35" 1 243 "0x19"
d G "LVD_33" 1 244 "0x18"
d G "LVD_30" 1 245 "0x17"
d G "LVD_28" 1 246 "0x16"
d G "LVD_27" 1 247 "0x15"
d G "LVD_25" 1 248 "0x14"
d G "LVD_24" 1 249 "0x13"
d G "LVD_23" 1 250 "0x12"
d G "LVD_22" 1 251 "0x11"
d G "LVD_21" 1 252 "0x10"
d G "LVD_TRIGGER_BELOW" 1 254 "0"
d G "LVD_TRIGGER_ABOVE" 1 255 "0x80"
d G "OSC_31KHZ" 1 261 "0"
d G "OSC_125KHZ" 1 262 "0x10"
d G "OSC_250KHZ" 1 263 "0x20"
d G "OSC_500KHZ" 1 264 "0x30"
d G "OSC_1MHZ" 1 265 "0x40"
d G "OSC_2MHZ" 1 266 "0x50"
d G "OSC_4MHZ" 1 267 "0x60"
d G "OSC_8MHZ" 1 268 "0x70"
d G "OSC_16MHZ" 1 269 "0x4060"
d G "OSC_32MHZ" 1 270 "0x4070"
d G "OSC_TIMER1" 1 272 "1"
d G "OSC_INTRC" 1 273 "2"
d G "OSC_NORMAL" 1 274 "0"
d G "OSC_IDLE_MODE" 1 276 "0x80"
d G "OSC_31250" 1 277 "0x8000"
d G "OSC_PLL_ON" 1 278 "0x4000"
d G "OSC_PLL_OFF" 1 279 "0"
d G "OSC_STATE_STABLE" 1 283 "4"
d G "OSC_STATE_EXT_RUNNING" 1 284 "8"
d G "ADC_OFF" 1 291 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 292 "0x100"
d G "ADC_CLOCK_DIV_4" 1 293 "0x04"
d G "ADC_CLOCK_DIV_8" 1 294 "0x01"
d G "ADC_CLOCK_DIV_16" 1 295 "0x05"
d G "ADC_CLOCK_DIV_32" 1 296 "0x02"
d G "ADC_CLOCK_DIV_64" 1 297 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 298 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 1 300 "0x00"
d G "ADC_TAD_MUL_2" 1 301 "0x08"
d G "ADC_TAD_MUL_4" 1 302 "0x10"
d G "ADC_TAD_MUL_6" 1 303 "0x18"
d G "ADC_TAD_MUL_8" 1 304 "0x20"
d G "ADC_TAD_MUL_12" 1 305 "0x28"
d G "ADC_TAD_MUL_16" 1 306 "0x30"
d G "ADC_TAD_MUL_20" 1 307 "0x38"
d G "NO_ANALOGS" 1 310 "0x0F" "None"
d G "ALL_ANALOG" 1 311 "0x00" "A0 A1 A2 A3 A5 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 1 312 "0x03" "A0 A1 A2 A3 A5 B2 B3 B1 B4"
d G "AN0_TO_AN10" 1 313 "0x04" "A0 A1 A2 A3 A5 B2 B3 B1"
d G "AN0_TO_AN9" 1 314 "0x05" "A0 A1 A2 A3 A5 B2 B3"
d G "AN0_TO_AN8" 1 315 "0x06" "A0 A1 A2 A3 A5 B2"
d G "AN0_TO_AN4" 1 316 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 1 317 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 1 318 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 1 319 "0x0D" "A0 A1"
d G "AN0" 1 320 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 1 321 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 1 322 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 1 323 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 1 324 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 1 325 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 1 326 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 1 327 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 1 328 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 1 329 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 1 332 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 1 333 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 1 334 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 1 335 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 339 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 340 "1"
d G "ADC_READ_ONLY" 1 341 "6"
d G "L_TO_H" 1 353 "0x40"
d G "H_TO_L" 1 354 "0"
d G "GLOBAL" 1 356 "0xF2C0"
d G "INT_RTCC" 1 357 "0xF220"
d G "INT_TIMER0" 1 358 "0xF220"
d G "INT_TIMER1" 1 359 "0x9D01"
d G "INT_TIMER2" 1 360 "0x9D02"
d G "INT_TIMER3" 1 361 "0xA002"
d G "INT_EXT" 1 362 "0xF210"
d G "INT_EXT1" 1 363 "0xF008"
d G "INT_EXT2" 1 364 "0xF010"
d G "INT_RB" 1 365 "0xFFF208"
d G "INT_AD" 1 366 "0x9D40"
d G "INT_RDA" 1 367 "0x9D20"
d G "INT_TBE" 1 368 "0x9D10"
d G "INT_SSP" 1 369 "0x9D08"
d G "INT_CCP1" 1 370 "0x9D04"
d G "INT_CCP2" 1 371 "0xA001"
d G "INT_BUSCOL" 1 372 "0xA008"
d G "INT_LOWVOLT" 1 373 "0xA004"
d G "INT_COMP" 1 374 "0xA040"
d G "INT_EEPROM" 1 375 "0xA010"
d G "INT_OSCF" 1 376 "0xA080"
d G "INT_USB" 1 377 "0xA020"
D G "_STDLIB" 2 12 ""
D G "RAND_MAX" 2 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 2 24 "1"
T G "div_t" 2 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 2 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
D G "_STDDEF" 3 13 ""
D G "ptrdiff_t" 3 18 "long"
D G "size_t" 3 21 "int"
D G "wchar_t" 3 22 "char"
D G "NULL" 3 23 "0"
D G "offsetof" 3 25 "(s,f) (offsetofbit(s,f)/8)"
C L "atof" 2 43 2 "FUNCTION"
C L "atof" 2 46 1 "*"
C L "atof" 2 46 1 "*"
V L "s" 2 50 "*int8"
F G "atof" 2 50 "float(*int8 s)" "Standard template: float atoe(char * s)"
C L "atof" 2 52 1 "*"
C L "atof" 2 52 1 "*"
C L "atof" 2 52 1 "*"
V L "s" 2 57 "*int8"
F G "atoe" 2 57 "float(*int8 s)" "Standard template: signed int  atoi(char * s)"
C L "atoe" 2 59 1 "*"
C L "atoe" 2 59 1 "*"
V L "s" 2 63 "*int8"
F G "atoi" 2 63 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
C L "atoi" 2 59 2 "FUNCTION"
V L "s" 2 68 "*int8"
F G "atoi32" 2 68 "sint32(*int8 s)" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 2 59 2 "FUNCTION"
V L "num" 2 73 "sint32"
V L "base" 2 73 "int8"
V L "s" 2 73 "*int8"
F G "itoa" 2 73 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed long  atol(char * s)"
C L "itoa" 2 75 1 "*"
C L "itoa" 2 75 1 "*"
V L "s" 2 79 "*int8"
F G "atol" 2 79 "sint16(*int8 s)" "Standard template: float strtol(char * s,char *endptr)"
C L "atol" 2 81 1 "*"
C L "atol" 2 81 1 "*"
C L "atol" 2 81 1 "*"
V L "s" 2 86 "*int8"
V L "endptr" 2 86 "*int8"
F G "strtod" 2 86 "float(*int8 s,*int8 endptr)" "Standard template: long strtoul(char * s,char *endptr,signed int base)"
C L "strtod" 2 88 1 "*"
C L "strtod" 2 88 1 "*"
C L "strtod" 2 88 1 "*"
C L "strtod" 2 88 1 "*"
V L "s" 2 94 "*int8"
V L "endptr" 2 94 "*int8"
V L "base" 2 94 "sint8"
F G "strtol" 2 94 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: long strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 2 96 1 "*"
C L "strtol" 2 96 1 "*"
C L "strtol" 2 96 1 "*"
C L "strtol" 2 96 1 "*"
V L "s" 2 102 "*int8"
V L "endptr" 2 102 "*int8"
V L "base" 2 102 "sint8"
F G "strtoul" 2 102 "int16(*int8 s,*int8 endptr,sint8 base)" "Pseudo-random sequence generation functions"
C L "strtoul" 2 96 1 "FUNCTION"
C L "strtoul" 2 108 1 "*"
C L "strtoul" 2 108 1 "*"
C L "strtoul" 2 108 1 "*"
C L "strtoul" 2 108 1 "*"
C L "strtoul" 2 108 1 "*"
F G "rand" 2 117 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 2 119 1 "*"
C L "rand" 2 119 1 "*"
C L "rand" 2 119 1 "*"
C L "rand" 2 119 1 "*"
C L "rand" 2 119 1 "*"
C L "rand" 2 119 1 "*"
C L "rand" 2 119 1 "*"
C L "rand" 2 119 1 "*"
C L "rand" 2 119 1 "*"
C L "rand" 2 119 1 "*"
C L "rand" 2 119 1 "*"
C L "rand" 2 119 1 "*"
C L "rand" 2 119 1 "*"
C L "rand" 2 119 1 "*"
C L "rand" 2 119 1 "*"
V L "seed" 2 139 "int32"
F G "srand" 2 139 "void(int32 seed)" "Memory management functions"
C L "srand" 2 119 3 "FUNCTION"
V L "string" 2 153 "*int8"
F G "system" 2 153 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 2 119 1 "FUNCTION"
C L "system" 2 159 1 "*"
C L "system" 2 159 1 "*"
C L "system" 2 159 1 "*"
C L "system" 2 159 1 "*"
C L "system" 2 159 1 "*"
C L "system" 2 159 1 "*"
C L "system" 2 159 1 "*"
C L "system" 2 159 1 "*"
C L "system" 2 159 1 "*"
C L "system" 2 159 1 "*"
C L "system" 2 159 4 "*"
C L "system" 2 177 1 "*"
C L "system" 2 177 1 "*"
C L "system" 2 177 1 "*"
C L "system" 2 177 1 "*"
C L "system" 2 177 1 "*"
C L "system" 2 177 1 "*"
C L "system" 2 177 1 "*"
C L "system" 2 177 1 "*"
D G "labs" 2 197 "abs"
V L "numer" 2 199 "sint8"
V L "denom" 2 199 "sint8"
F G "div" 2 199 "div_t(sint8 numer,sint8 denom)"
V L "numer" 2 200 "sint16"
V L "denom" 2 200 "sint16"
F G "ldiv" 2 200 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 2 177 4 "FUNCTION"
C L "ldiv" 3 2 7 "FUNCTION"
D G "_STRING" 4 12 ""
C L "ldiv" 3 2 7 "FUNCTION"
D G "_CTYPE" 5 12 ""
D G "islower" 5 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 5 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 5 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 5 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 5 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 5 19 "(x)  ((x)==' ')"
D G "isxdigit" 5 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 5 21 "(x)  ((x)<' ')"
D G "isprint" 5 22 "(x)  ((x)>=' ')"
D G "isgraph" 5 23 "(x)  ((x)>' ')"
D G "ispunct" 5 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "ldiv" 4 19 10 "FUNCTION"
V L "s1" 4 34 "*int8"
V L "s2" 4 34 "*int8"
V L "n" 4 34 "int8"
F G "memmove" 4 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 4 36 "*int8"
V L "sc2" 4 37 "*int8"
C L "strcopy" 4 19 3 "FUNCTION"
V L "s1" 4 53 "*int8"
V L "s2" 4 53 "*int8"
F G "strcopy" 4 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 55 "*int8"
C L "strncpy" 4 19 4 "FUNCTION"
V L "s1" 4 69 "*int8"
V L "s2" 4 69 "*int8"
V L "n" 4 69 "int8"
F G "strncpy" 4 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 71 "*int8"
C L "strcat" 4 19 3 "FUNCTION"
V L "s1" 4 86 "*int8"
V L "s2" 4 86 "*int8"
F G "strcat" 4 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 88 "*int8"
C L "strncat" 4 19 2 "FUNCTION"
V L "s1" 4 104 "*int8"
V L "s2" 4 104 "*int8"
V L "n" 4 104 "int8"
F G "strncat" 4 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 106 "*int8"
C L "memcmp" 4 19 3 "FUNCTION"
V L "s1" 4 128 "*int8"
V L "s2" 4 128 "*int8"
V L "n" 4 128 "int8"
F G "memcmp" 4 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 4 130 "*int8"
V L "su2" 4 130 "*int8"
C L "strcmp" 4 19 2 "FUNCTION"
V L "s1" 4 142 "*int8"
V L "s2" 4 142 "*int8"
F G "strcmp" 4 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 4 19 2 "FUNCTION"
V L "s1" 4 152 "*int8"
V L "s2" 4 152 "*int8"
F G "strcoll" 4 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 4 19 4 "FUNCTION"
V L "s1" 4 165 "*int8"
V L "s2" 4 165 "*int8"
V L "n" 4 165 "int8"
F G "strncmp" 4 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 4 19 3 "FUNCTION"
V L "s1" 4 177 "*int8"
V L "s2" 4 177 "*int8"
V L "n" 4 177 "int8"
F G "strxfrm" 4 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 179 "*int8"
V L "n1" 4 180 "int8"
C L "memchr" 4 19 3 "FUNCTION"
V L "s" 4 199 "*int8"
V L "c" 4 199 "int8"
V L "n" 4 199 "int8"
F G "memchr" 4 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 4 201 "int8"
V L "su" 4 202 "*int8"
C L "strchr" 4 19 2 "FUNCTION"
V L "s" 4 213 "*int8"
V L "c" 4 213 "int8"
F G "strchr" 4 214 "*int8(*int8 s,int8 c)"
C L "strcspn" 4 19 4 "FUNCTION"
V L "s1" 4 225 "*int8"
V L "s2" 4 225 "*int8"
F G "strcspn" 4 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 227 "*int8"
V L "sc2" 4 227 "*int8"
C L "strpbrk" 4 19 4 "FUNCTION"
V L "s1" 4 240 "*int8"
V L "s2" 4 240 "*int8"
F G "strpbrk" 4 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 242 "*int8"
V L "sc2" 4 242 "*int8"
C L "strrchr" 4 19 2 "FUNCTION"
V L "s" 4 255 "*int8"
V L "c" 4 255 "int8"
F G "strrchr" 4 256 "*int8(*int8 s,int8 c)"
V L "p" 4 257 "*int8"
C L "strspn" 4 19 2 "FUNCTION"
V L "s1" 4 270 "*int8"
V L "s2" 4 270 "*int8"
F G "strspn" 4 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 272 "*int8"
V L "sc2" 4 272 "*int8"
C L "strstr" 4 19 6 "FUNCTION"
V L "s1" 4 289 "*int8"
V L "s2" 4 289 "*int8"
F G "strstr" 4 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 291 "*int8"
V L "t" 4 291 "*int8"
C L "strtok" 4 19 13 "FUNCTION"
V L "s1" 4 328 "*int8"
V L "s2" 4 328 "*int8"
F G "strtok" 4 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 4 330 "*int8"
V L "end" 4 330 "*int8"
V L "save" 4 331 "*int8"
C L "strlen" 4 19 6 "FUNCTION"
V L "s" 4 377 "*int8"
F G "strlen" 4 378 "*int8(*int8 s)"
V L "sc" 4 379 "*int8"
C L "stricmp" 4 19 2 "FUNCTION"
V L "s1" 4 388 "*int8"
V L "s2" 4 388 "*int8"
F G "stricmp" 4 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 4 19 3 "FUNCTION"
V L "s" 4 402 "*int8"
F G "strlwr" 4 403 "*int8(*int8 s)"
V L "p" 4 404 "*int8"
V L "numer" 2 222 "sint8"
V L "denom" 2 222 "sint8"
F G "div" 2 223 "div_t(sint8 numer,sint8 denom)"
V L "val" 2 224 "div_t"
V L "numer" 2 230 "sint16"
V L "denom" 2 230 "sint16"
F G "ldiv" 2 231 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 2 232 "ldiv_t"
V L "s" 2 238 "*int8"
F G "atof" 2 239 "float(*int8 s)"
V L "pow10" 2 240 "float"
V L "result" 2 241 "float"
V L "sign" 2 242 "int8"
V L "c" 2 243 "int8"
V L "ptr" 2 244 "int8"
V L "s" 2 277 "*int8"
F G "atoe" 2 278 "float(*int8 s)"
V L "pow10" 2 279 "float"
V L "result" 2 280 "float"
V L "sign" 2 281 "int8"
V L "expsign" 2 282 "int8"
V L "c" 2 283 "int8"
V L "ptr" 2 284 "int8"
V L "i" 2 285 "int8"
V L "exp" 2 286 "float"
V L "expcnt" 2 287 "int8"
C L "atoe" 2 313 1 "FUNCTION"
V L "s" 2 344 "*int8"
F G "atoi" 2 345 "sint8(*int8 s)"
V L "result" 2 346 "sint8"
V L "sign" 2 347 "int8"
V L "base" 2 347 "int8"
V L "index" 2 347 "int8"
V L "c" 2 348 "int8"
C L "atoi" 2 313 1 "FUNCTION"
C L "atoi" 2 313 1 "FUNCTION"
C L "atoi" 2 313 1 "FUNCTION"
C L "atoi" 2 313 1 "FUNCTION"
C L "atoi" 2 313 1 "FUNCTION"
C L "atoi" 2 313 1 "FUNCTION"
V L "s" 2 413 "*int8"
F G "atol" 2 414 "sint16(*int8 s)"
V L "result" 2 415 "sint16"
V L "sign" 2 416 "int8"
V L "base" 2 416 "int8"
V L "index" 2 416 "int8"
V L "c" 2 417 "int8"
C L "atol" 2 313 1 "FUNCTION"
C L "atol" 2 313 1 "FUNCTION"
C L "atol" 2 313 1 "FUNCTION"
C L "atol" 2 313 1 "FUNCTION"
C L "mult_with10" 2 313 1 "FUNCTION"
V L "num" 2 480 "int32"
F G "mult_with10" 2 481 "sint32(int32 num)"
V L "s" 2 485 "*int8"
F G "atoi32" 2 486 "sint32(*int8 s)"
V L "result" 2 487 "sint32"
V L "sign" 2 488 "int8"
V L "base" 2 488 "int8"
V L "index" 2 488 "int8"
V L "c" 2 489 "int8"
C L "atoi32" 2 313 1 "FUNCTION"
C L "atoi32" 2 313 1 "FUNCTION"
C L "atoi32" 2 313 1 "FUNCTION"
C L "atoi32" 2 313 1 "FUNCTION"
C L "atoi32" 2 313 1 "FUNCTION"
V L "num" 2 550 "sint32"
V L "base" 2 550 "int8"
V L "s" 2 550 "*int8"
F G "itoa" 2 551 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 2 552 "int32"
V L "i" 2 553 "int8"
V L "sign" 2 553 "int8"
V L "cnt" 2 553 "int8"
V L "c" 2 554 "int8"
C L "itoa" 2 313 1 "FUNCTION"
C L "itoa" 2 313 1 "FUNCTION"
C L "itoa" 2 313 1 "FUNCTION"
C L "itoa" 2 313 1 "FUNCTION"
C L "itoa" 2 313 1 "FUNCTION"
V L "s" 2 587 "*int8"
V L "endptr" 2 587 "*int8"
F G "strtod" 2 587 "float(*int8 s,*int8 endptr)"
V L "pow10" 2 588 "float"
V L "result" 2 589 "float"
V L "sign" 2 590 "int8"
V L "point" 2 590 "int8"
V L "c" 2 591 "int8"
V L "ptr" 2 592 "int8"
V L "s" 2 651 "*int8"
V L "endptr" 2 651 "*int8"
V L "base" 2 651 "sint8"
F G "strtoul" 2 652 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 2 653 "*int8"
V L "s1" 2 653 "*int8"
V L "sd" 2 653 "*int8"
V L "x" 2 654 "int16"
V L "sign" 2 655 "int8"
V L "digits" 2 656 "int8[1]"
C L "strtoul" 2 313 1 "FUNCTION"
C L "strtoul" 2 313 1 "FUNCTION"
C L "strtoul" 2 313 1 "FUNCTION"
V L "s" 2 713 "*int8"
V L "endptr" 2 713 "*int8"
V L "base" 2 713 "sint8"
F G "strtol" 2 714 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 2 715 "*int8"
V L "s1" 2 715 "*int8"
V L "sd" 2 715 "*int8"
V L "x" 2 716 "sint16"
V L "sign" 2 717 "int8"
V L "digits" 2 718 "int8[1]"
C L "strtol" 2 313 1 "FUNCTION"
C L "strtol" 2 313 1 "FUNCTION"
C L "strtol" 2 313 1 "FUNCTION"
V L "string" 2 776 "*int8"
F G "system" 2 777 "sint8(*int8 string)"
V L "s" 2 781 "*int8"
V L "n" 2 781 "int8"
F G "mblen" 2 782 "int8(*int8 s,int8 n)"
V L "pwc" 2 786 "*int8"
V L "s" 2 786 "*int8"
V L "n" 2 786 "int8"
F G "mbtowc" 2 787 "int8(*int8 pwc,*int8 s,int8 n)"
V L "s" 2 792 "*int8"
V L "wchar" 2 792 "int8"
F G "wctomb" 2 793 "int8(*int8 s,int8 wchar)"
V L "pwcs" 2 798 "*int8"
V L "s" 2 798 "*int8"
V L "n" 2 798 "int8"
F G "mbstowcs" 2 799 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "s" 2 804 "*int8"
V L "pwcs" 2 804 "*int8"
V L "n" 2 804 "int8"
F G "wcstombs" 2 805 "int8(*int8 s,*int8 pwcs,int8 n)"
V G "_Randseed" 2 814 "int32"
F G "rand" 2 817 "int16()"
V L "seed" 2 822 "int32"
F G "srand" 2 823 "void(int32 seed)"
V L "p1" 2 831 "*int8"
V L "p2" 2 831 "*int8"
T G "*_Cmpfun" 2 831 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 2 833 "*int8"
V L "qitems" 2 833 "int8"
V L "qsize" 2 833 "int8"
V L "cmp" 2 833 "_Cmpfun"
F G "qsort" 2 833 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 2 834 "int8"
V L "j" 2 834 "int8"
V L "i" 2 834 "int8"
V L "l" 2 834 "int8"
V L "done" 2 835 "int1"
V L "t" 2 836 "int8[16]"
V L "key" 2 861 "*int8"
V L "base" 2 861 "*int8"
V L "num" 2 861 "int8"
V L "width" 2 861 "int8"
V L "cmp" 2 861 "_Cmpfun"
F G "bsearch" 2 862 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "p" 2 863 "*int8"
V L "q" 2 863 "*int8"
V L "n" 2 864 "int8"
V L "pivot" 2 865 "int8"
V L "val" 2 866 "sint8"
C L "bsearch" 2 313 1 "FUNCTION"
D G "USB_HID_DEVICE" 0 23 "TRUE"
D G "USB_EP1_TX_ENABLE" 0 24 "USB_ENABLE_INTERRUPT" "turn on EP1 for IN bulk/interrupt transfers"
D G "USB_EP1_TX_SIZE" 0 25 "64" "allocate 64 bytes in the hardware for transmission"
D G "USB_EP1_RX_ENABLE" 0 27 "USB_ENABLE_INTERRUPT" "turn on EP1 for OUT bulk/interrupt transfers"
D G "USB_EP1_RX_SIZE" 0 28 "64" "allocate 64 bytes in the hardware for reception"
D G "__USB_HARDWARE__" 6 132 ""
D G "__PIC__" 6 135 "1"
D G "USB_USE_FULL_SPEED" 6 138 "TRUE"
D G "USB_CON_SENSE_PIN" 6 142 "0"
D G "USB_MAX_EP0_PACKET_LENGTH" 6 150 "64"
D G "__USB_PROTOTYPES__" 7 169 ""
D G "USB_HID_BOOT_PROTOCOL" 7 172 "FALSE"
D G "USB_HID_IDLE" 7 176 "FALSE"
D G "USB_CDC_DEVICE" 7 185 "FALSE"
D G "USB_OPT_FOR_ROM" 7 189 "TRUE" "set to false to opt for less RAM, true to opt for less ROM"
D G "USB_NUM_CONFIGURATIONS" 7 197 "1" "DO NOT CHANGE"
D G "PID_IN" 7 200 "0x09" "device to host transactions"
D G "PID_OUT" 7 201 "0x01" "host to device transactions"
D G "PID_SETUP" 7 202 "0x0D" "host to device setup transaction"
D G "PID_ACK" 7 203 "0x02" "receiver accepts error-free data packet"
D G "PID_DATA0" 7 204 "0x03" "data packet with even sync bit"
D G "PID_SOF" 7 205 "0x05" "start of framer marker and frame number"
D G "PID_NAK" 7 206 "0x0A" "receiver can't accept data or sender cant send data or has no data to transmit"
D G "PID_DATA1" 7 207 "0x0B" "data packet with odd sync bit"
D G "PID_PRE" 7 208 "0x0C" "preamble issued by host.  enables downstream traffic to low-speed device"
D G "PID_STALL" 7 209 "0x0E" "a control request isnt supported or the endpoint is halted"
D G "USB_DESC_DEVICE_TYPE" 7 212 "0x01" "#DEFINE USB_DEVICE_DESC_KEY      0x01"
D G "USB_DESC_CONFIG_TYPE" 7 213 "0x02" "#DEFINE USB_CONFIG_DESC_KEY      0x02"
D G "USB_DESC_STRING_TYPE" 7 214 "0x03" "#DEFINE USB_STRING_DESC_KEY      0x03"
D G "USB_DESC_INTERFACE_TYPE" 7 215 "0x04" "#DEFINE USB_INTERFACE_DESC_KEY   0x04"
D G "USB_DESC_ENDPOINT_TYPE" 7 216 "0x05" "#DEFINE USB_ENDPOINT_DESC_KEY    0x05"
D G "USB_DESC_CLASS_TYPE" 7 217 "0x21" "#DEFINE USB_CLASS_DESC_KEY       0x21"
D G "USB_DESC_HIDREPORT_TYPE" 7 218 "0x22"
D G "USB_DESC_DEVICE_LEN" 7 221 "18" "#DEFINE USB_DEVICE_DESC_LEN      18"
D G "USB_DESC_CONFIG_LEN" 7 222 "9" "#DEFINE USB_CONFIG_DESC_LEN      9"
D G "USB_DESC_INTERFACE_LEN" 7 223 "9" "#DEFINE USB_INTERFACE_DESC_LEN   9"
D G "USB_DESC_CLASS_LEN" 7 224 "9" "#DEFINE USB_CLASS_DESC_LEN       9"
D G "USB_DESC_ENDPOINT_LEN" 7 225 "7" "#DEFINE USB_ENDPOINT_DESC_LEN    7"
D G "USB_STANDARD_REQUEST_GET_STATUS" 7 228 "0x00"
D G "USB_STANDARD_REQUEST_CLEAR_FEATURE" 7 229 "0x01"
D G "USB_STANDARD_REQUEST_SET_FEATURE" 7 230 "0x03"
D G "USB_STANDARD_REQUEST_SET_ADDRESS" 7 231 "0x05"
D G "USB_STANDARD_REQUEST_GET_DESCRIPTOR" 7 232 "0x06"
D G "USB_STANDARD_REQUEST_SET_DESCRIPTOR" 7 233 "0x07"
D G "USB_STANDARD_REQUEST_GET_CONFIGURATION" 7 234 "0x08"
D G "USB_STANDARD_REQUEST_SET_CONFIGURATION" 7 235 "0x09"
D G "USB_STANDARD_REQUEST_GET_INTERFACE" 7 236 "0x0A"
D G "USB_STANDARD_REQUEST_SET_INTERFACE" 7 237 "0x0B"
D G "USB_STANDARD_REQUEST_SYNCH_FRAME" 7 238 "0x0C"
D G "USB_HID_REQUEST_GET_REPORT" 7 241 "0x01"
D G "USB_HID_REQUEST_GET_IDLE" 7 242 "0x02"
D G "USB_HID_REQUEST_GET_PROTOCOL" 7 243 "0x03"
D G "USB_HID_REQUEST_SET_REPORT" 7 244 "0x09"
D G "USB_HID_REQUEST_SET_IDLE" 7 245 "0x0A"
D G "USB_HID_REQUEST_SET_PROTOCOL" 7 246 "0x0B"
D G "USB_ENDPOINT_TYPE_CONTROL" 7 249 "0x00"
D G "USB_ENDPOINT_TYPE_ISOCHRONOUS" 7 250 "0x01"
D G "USB_ENDPOINT_TYPE_BULK" 7 251 "0x02"
D G "USB_ENDPOINT_TYPE_INTERRUPT" 7 252 "0x03"
D G "USB_ENABLE_DISABLED" 7 255 "0"
D G "USB_ENABLE_BULK" 7 256 "0x01"
D G "USB_ENABLE_ISOCHRONOUS" 7 257 "0x02"
D G "USB_ENABLE_INTERRUPT" 7 258 "0x03"
D G "USB_ENABLE_CONTROL" 7 259 "0x04"
V G "USB_stack_status" 7 276 "{USB_STATES dev_req,int8 curr_config,int8 status_device,USB_GETDESC_TYPES getdesc_type}"
V G "__usb_kbhit_status" 7 286 "int16" "/ *** User function prototypes"
F G "usb_wait_for_enumeration" 7 289 "void()"
F G "usb_unermated" 7 290 "int8()"
V L "endpoint" 7 291 "int8"
V L "ptr" 7 291 "*int8"
V L "max" 7 291 "int16"
V L "timeout" 7 291 "int16"
F G "usb_gets" 7 291 "int8(int8 endpoint,*int8 ptr,int16 max,int16 timeout)"
V L "endpoint" 7 292 "int8"
V L "ptr" 7 292 "*int8"
V L "len" 7 292 "int16"
V L "timeout" 7 292 "int8"
F G "usb_puts" 7 292 "int8(int8 endpoint,*int8 ptr,int16 len,int8 timeout)" "/ *** Token and request hanlder function prototypes"
F G "usb_token_reset" 7 295 "void()"
F G "usb_put_0len_0" 7 297 "void()"
V L "len" 7 298 "int8"
F G "usb_request_send_response" 7 298 "void(int8 len)" "always sends usb_ep0_rx_buffer[] to endpoint 0 with a toggle of DATA"
V L "endpoint" 7 300 "int8"
V L "status" 7 300 "*int16"
V L "buffer" 7 300 "*int16"
V L "size" 7 300 "*int8"
F G "usb_match_registers" 7 300 "void(int8 endpoint,*int16 status,*int16 buffer,*int8 size)"
V L "endpoint" 7 302 "int8"
F G "usb_isr_tok_in_dne" 7 302 "void(int8 endpoint)"
V L "endpoint" 7 303 "int8"
F G "usb_isr_tok_out_dne" 7 303 "void(int8 endpoint)"
F G "usb_isr_tok_setup_dne" 7 304 "void()"
F G "usb_isr_tkn_setup_StandardEndpoint" 7 306 "void()"
F G "usb_isr_tkn_setup_StandardDevice" 7 307 "void()"
F G "usb_isr_tkn_setup_StandardInterface" 7 308 "void()"
F G "usb_isr_tkn_setup_ClassInterface" 7 311 "void()"
F G "usb_Get_Descriptor" 7 314 "void()"
F G "usb_copy_desc_seg_to_ep" 7 315 "void()"
F G "usb_finish_set_address" 7 317 "void()" "*** ENABLE RX ENDPOINTS AND BUFFERS"
D G "USB_EP0_TX_ENABLE" 7 322 "USB_ENABLE_CONTROL"
D G "USB_EP0_RX_ENABLE" 7 323 "USB_ENABLE_CONTROL"
D G "USB_EP0_RX_SIZE" 7 324 "USB_MAX_EP0_PACKET_LENGTH" "endpoint 0 is setup, and should always be the MAX_PACKET_LENGTH.  Slow speed specifies 8"
D G "USB_EP0_TX_SIZE" 7 325 "USB_MAX_EP0_PACKET_LENGTH" "endpoint 0 is setup, and should always be the MAX_PACKET_LENGTH.  Slow speed specifies 8"
D G "USB_EP2_TX_ENABLE" 7 360 "USB_ENABLE_DISABLED"
D G "USB_EP2_RX_ENABLE" 7 363 "USB_ENABLE_DISABLED"
D G "USB_EP2_RX_SIZE" 7 370 "0"
D G "USB_EP2_TX_SIZE" 7 381 "0"
D G "USB_EP3_TX_ENABLE" 7 391 "USB_ENABLE_DISABLED"
D G "USB_EP3_RX_ENABLE" 7 394 "USB_ENABLE_DISABLED"
D G "USB_EP3_RX_SIZE" 7 401 "0"
D G "USB_EP3_TX_SIZE" 7 412 "0"
D G "USB_EP4_TX_ENABLE" 7 422 "USB_ENABLE_DISABLED"
D G "USB_EP4_RX_ENABLE" 7 425 "USB_ENABLE_DISABLED"
D G "USB_EP4_RX_SIZE" 7 432 "0"
D G "USB_EP4_TX_SIZE" 7 443 "0"
D G "USB_EP5_TX_ENABLE" 7 453 "USB_ENABLE_DISABLED"
D G "USB_EP5_RX_ENABLE" 7 456 "USB_ENABLE_DISABLED"
D G "USB_EP5_RX_SIZE" 7 463 "0"
D G "USB_EP5_TX_SIZE" 7 474 "0"
D G "USB_EP6_TX_ENABLE" 7 484 "USB_ENABLE_DISABLED"
D G "USB_EP6_RX_ENABLE" 7 487 "USB_ENABLE_DISABLED"
D G "USB_EP6_RX_SIZE" 7 494 "0"
D G "USB_EP6_TX_SIZE" 7 505 "0"
D G "USB_EP7_TX_ENABLE" 7 515 "USB_ENABLE_DISABLED"
D G "USB_EP7_RX_ENABLE" 7 518 "USB_ENABLE_DISABLED"
D G "USB_EP7_RX_SIZE" 7 525 "0"
D G "USB_EP7_TX_SIZE" 7 536 "0"
D G "USB_EP8_TX_ENABLE" 7 546 "USB_ENABLE_DISABLED"
D G "USB_EP8_RX_ENABLE" 7 549 "USB_ENABLE_DISABLED"
D G "USB_EP8_RX_SIZE" 7 556 "0"
D G "USB_EP8_TX_SIZE" 7 567 "0"
D G "USB_EP9_TX_ENABLE" 7 577 "USB_ENABLE_DISABLED"
D G "USB_EP9_RX_ENABLE" 7 580 "USB_ENABLE_DISABLED"
D G "USB_EP9_RX_SIZE" 7 587 "0"
D G "USB_EP9_TX_SIZE" 7 598 "0"
D G "USB_EP10_TX_ENABLE" 7 608 "USB_ENABLE_DISABLED"
D G "USB_EP10_RX_ENABLE" 7 611 "USB_ENABLE_DISABLED"
D G "USB_EP10_RX_SIZE" 7 618 "0"
D G "USB_EP10_TX_SIZE" 7 629 "0"
D G "USB_EP11_TX_ENABLE" 7 639 "USB_ENABLE_DISABLED"
D G "USB_EP11_RX_ENABLE" 7 642 "USB_ENABLE_DISABLED"
D G "USB_EP11_RX_SIZE" 7 649 "0"
D G "USB_EP11_TX_SIZE" 7 660 "0"
D G "USB_EP12_TX_ENABLE" 7 670 "USB_ENABLE_DISABLED"
D G "USB_EP12_RX_ENABLE" 7 673 "USB_ENABLE_DISABLED"
D G "USB_EP12_RX_SIZE" 7 680 "0"
D G "USB_EP12_TX_SIZE" 7 691 "0"
D G "USB_EP13_TX_ENABLE" 7 701 "USB_ENABLE_DISABLED"
D G "USB_EP13_RX_ENABLE" 7 704 "USB_ENABLE_DISABLED"
D G "USB_EP13_RX_SIZE" 7 711 "0"
D G "USB_EP13_TX_SIZE" 7 722 "0"
D G "USB_EP14_TX_ENABLE" 7 732 "USB_ENABLE_DISABLED"
D G "USB_EP14_RX_ENABLE" 7 735 "USB_ENABLE_DISABLED"
D G "USB_EP14_RX_SIZE" 7 742 "0"
D G "USB_EP14_TX_SIZE" 7 753 "0"
D G "USB_EP15_TX_ENABLE" 7 763 "USB_ENABLE_DISABLED"
D G "USB_EP15_RX_ENABLE" 7 766 "USB_ENABLE_DISABLED"
D G "USB_EP15_RX_SIZE" 7 773 "0"
D G "USB_EP15_TX_SIZE" 7 784 "0"
V G "usb_ep_tx_type" 7 791 "int8[16]"
V G "usb_ep_rx_type" 7 800 "int8[16]"
V G "usb_ep_tx_size" 7 809 "int16[16]"
V G "usb_ep_rx_size" 7 818 "int16[16]"
D G "USB_BUFFER_NEEDED" 6 155 " (USB_EP0_TX_SIZE+USB_EP0_RX_SIZE+USB_EP1_TX_SIZE+USB_EP1_RX_SIZE+USB_EP2_TX_SIZE+USB_EP2_RX_SIZE+USB_EP3_TX_SIZE+USB_EP3_RX_SIZE+USB_EP4_TX_SIZE+USB_EP4_RX_SIZE+USB_EP5_TX_SIZE+USB_EP5_RX_SIZE+USB_EP6_TX_SIZE+USB_EP6_RX_SIZE+USB_EP7_TX_SIZE+USB_EP7_RX_SIZE+USB_EP8_TX_SIZE+USB_EP8_RX_SIZE+USB_EP9_TX_SIZE+USB_EP9_RX_SIZE+USB_EP10_TX_SIZE+USB_EP10_RX_SIZE+USB_EP11_TX_SIZE+USB_EP11_RX_SIZE+USB_EP12_TX_SIZE+USB_EP12_RX_SIZE+USB_EP13_TX_SIZE+USB_EP13_RX_SIZE+USB_EP14_TX_SIZE+USB_EP14_RX_SIZE+USB_EP15_TX_SIZE+USB_EP15_RX_SIZE)"
D G "debug_usb" 6 163 "(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z)"
D G "debug_display_ram" 6 166 "(x,y)"
D G "USB_IGNORE_RX_DTS" 6 185 "FALSE"
D G "USB_IGNORE_TX_DTS" 6 189 "FALSE"
D G "USB_USE_ERROR_COUNTER" 6 195 "FALSE"
D G "USB_PING_PONG_MODE_OFF" 6 198 "0" "no ping pong"
D G "USB_PING_PONG_MODE_E0" 6 199 "1" "ping pong endpoint 0 only"
D G "USB_PING_PONG_MODE_ON" 6 200 "2" "ping pong all endpoints"
D G "USB_PING_PONG_MODE" 6 204 "USB_PING_PONG_MODE_OFF"
C L "usb_finish_set_address" 6 164 1 "FUNCTION"
D G "UEP0_LOC" 6 248 "0xF70"
D G "USB_Buffer" 6 252 "0x500"
D G "BD0STAT_LOC" 6 259 "0x400"
D G "BD0CNT_LOC" 6 260 "0x401"
D G "BD0ADRL_LOC" 6 261 "0x402"
D G "BD0ADRH_LOC" 6 262 "0x403"
D G "UEP" 6 264 "(x) *(UEP0_LOC+x)"
D G "EP_BDxST_O" 6 267 "(x)    *(BD0STAT_LOC + x*8)"
D G "EP_BDxCNT_O" 6 268 "(x)    *(BD0CNT_LOC + x*8)"
D G "EP_BDxADR_O" 6 269 "(x)   *(int16 *)(BD0ADRL_LOC + x*8)"
D G "EP_BDxST_I" 6 270 "(x)    *(BD0STAT_LOC + 4 + x*8)"
D G "EP_BDxCNT_I" 6 271 "(x)    *(BD0CNT_LOC + 4 + x*8)"
D G "EP_BDxADR_I" 6 272 "(x)   *(int16 *)(BD0ADRL_LOC + 4 + x*8)"
D G "ENDPT_DISABLED" 6 278 "0x00" "endpoint not used"
D G "ENDPT_IN_ONLY" 6 279 "0x02" "endpoint supports IN transactions only"
D G "ENDPT_OUT_ONLY" 6 280 "0x04" "endpoint supports OUT transactions only"
D G "ENDPT_CONTROL" 6 281 "0x06" "Supports IN, OUT and CONTROL transactions - Only use with EP0"
D G "ENDPT_NON_CONTROL" 6 282 "0x0E" "Supports both IN and OUT transactions"
C L "usb_finish_set_address" 6 164 1 "FUNCTION"
V G "usb_state" 6 286 ""
D G "USB_PIC_PID_IN" 6 289 "0x24" "device to host transactions"
D G "USB_PIC_PID_OUT" 6 290 "0x04" "host to device transactions"
D G "USB_PIC_PID_SETUP" 6 291 "0x34" "host to device setup transaction"
D G "USTAT_IN_E0" 6 293 "4"
D G "USTAT_OUT_SETUP_E0" 6 294 "0"
D G "__USB_UIF_RESET" 6 296 "0x01"
D G "__USB_UIF_ERROR" 6 297 "0x02"
D G "__USB_UIF_ACTIVE" 6 298 "0x04"
D G "__USB_UIF_TOKEN" 6 299 "0x08"
D G "__USB_UIF_IDLE" 6 300 "0x10"
D G "__USB_UIF_STALL" 6 301 "0x20"
D G "__USB_UIF_SOF" 6 302 "0x40"
D G "STANDARD_INTS" 6 307 "0x3D"
D G "__USB_UCFG_UTEYE" 6 310 "0x80"
D G "__USB_UCFG_UOEMON" 6 311 "0x40"
D G "__USB_UCFG_UPUEN" 6 312 "0x10"
D G "__USB_UCFG_UTRDIS" 6 313 "0x08"
D G "__USB_UCFG_FSEN" 6 314 "0x04"
D G "__UCFG_VAL_ENABLED__" 6 317 " (__USB_UCFG_UPUEN | __USB_UCFG_FSEN | USB_PING_PONG_MODE)"
D G "__UCFG_VAL_DISABLED__" 6 322 "0x08"
V G "usb_ep0_rx_buffer" 6 324 "int8[64]"
V G "usb_ep0_tx_buffer" 6 327 "int8[64]"
V G "__setup_0_tx_size" 6 330 "int8" "interrupt handler, specific to PIC18Fxx5x peripheral only"
F G "usb_handle_interrupt" 6 333 "void()"
F G "usb_isr_rst" 6 334 "void()"
F G "usb_isr_uerr" 6 335 "void()"
F G "usb_isr_sof" 6 336 "void()"
F G "usb_isr_activity" 6 337 "void()"
F G "usb_isr_uidle" 6 338 "void()"
F G "usb_isr_tok_dne" 6 339 "void()"
F G "usb_isr_stall" 6 340 "void()"
F G "usb_init_ep0_setup" 6 341 "void()" "following functions standard part of CCS PIC USB driver, and used by usb.c"
F G "usb_init" 6 344 "void()"
F G "usb_detach" 6 345 "void()"
V L "endpoint" 6 346 "int8"
V L "ptr" 6 346 "*int8"
V L "len" 6 346 "int16"
V L "tgl" 6 346 "USB_DTS_BIT"
F G "usb_put_packet" 6 346 "int8(int8 endpoint,*int8 ptr,int16 len,USB_DTS_BIT tgl)"
V L "endpoint" 6 347 "int8"
V L "len" 6 347 "int16"
V L "tgl" 6 347 "USB_DTS_BIT"
F G "usb_flush_in" 6 347 "int8(int8 endpoint,int16 len,USB_DTS_BIT tgl)" "marks the transmit buffer as ready for transmission"
V L "endpoint" 6 348 "int8"
V L "ptr" 6 348 "*int8"
V L "max" 6 348 "int16"
F G "usb_get_packet" 6 348 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "endpoint" 6 349 "int8"
F G "usb_rx_packet_size" 6 349 "int16(int8 endpoint)"
V L "endpoint" 6 350 "int8"
V L "ptr" 6 350 "*int8"
V L "max" 6 350 "int16"
F G "usb_get_packet_buffer" 6 350 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "endpoint" 6 351 "int8"
V L "tgl" 6 351 "USB_DTS_BIT"
F G "usb_flush_out" 6 351 "void(int8 endpoint,USB_DTS_BIT tgl)"
V L "endpoint" 6 352 "int8"
F G "usb_stall_ep" 6 352 "void(int8 endpoint)"
V L "endpoint" 6 353 "int8"
F G "usb_unstall_ep" 6 353 "void(int8 endpoint)"
V L "endpoint" 6 354 "int8"
F G "usb_endpoint_stalled" 6 354 "int8(int8 endpoint)"
V L "address" 6 355 "int8"
F G "usb_set_address" 6 355 "void(int8 address)"
V L "config" 6 356 "int8"
F G "usb_set_configured" 6 356 "void(int8 config)"
F G "usb_disable_endpoints" 6 357 "void()" "BEGIN User Functions:"
D G "usb_attached" 6 370 "() TRUE"
C L "usb_disable_endpoints" 6 164 5 "FUNCTION"
F G "usb_detach" 6 379 "void()" "done"
C L "usb_detach" 6 164 1 "FUNCTION"
C L "usb_detach" 6 164 1 "FUNCTION"
C L "usb_detach" 6 164 1 "FUNCTION"
C L "usb_attach" 6 164 7 "FUNCTION"
F G "usb_attach" 6 397 "void()"
C L "usb_attach" 6 164 1 "FUNCTION"
C L "usb_attach" 6 164 1 "FUNCTION"
C L "usb_attach" 6 164 1 "FUNCTION"
D G "usb_init_cs" 6 419 "usb_detach"
C L "usb_task" 6 164 13 "FUNCTION"
F G "usb_task" 6 435 "void()"
C L "usb_task" 6 164 1 "FUNCTION"
C L "usb_init" 6 164 15 "FUNCTION"
F G "usb_init" 6 476 "void()"
C L "usb_flush_in" 6 164 12 "FUNCTION"
V L "endpoint" 6 498 "int8"
V L "len" 6 498 "int16"
V L "tgl" 6 498 "USB_DTS_BIT"
F G "usb_flush_in" 6 498 "int8(int8 endpoint,int16 len,USB_DTS_BIT tgl)"
V L "i" 6 499 "int8"
C L "usb_flush_in" 6 164 1 "FUNCTION"
C L "usb_flush_in" 6 164 1 "FUNCTION"
C L "usb_flush_in" 6 164 1 "FUNCTION"
C L "usb_flush_in" 6 164 1 "FUNCTION"
C L "usb_flush_in" 6 164 1 "FUNCTION"
C L "usb_flush_in" 6 164 1 "FUNCTION"
C L "usb_put_packet" 6 164 21 "FUNCTION"
V L "endpoint" 6 573 "int8"
V L "ptr" 6 573 "*int8"
V L "len" 6 573 "int16"
V L "tgl" 6 573 "USB_DTS_BIT"
F G "usb_put_packet" 6 573 "int8(int8 endpoint,*int8 ptr,int16 len,USB_DTS_BIT tgl)" "done"
V L "j" 6 574 "int16"
V L "i" 6 575 "int8"
V L "buff_add" 6 576 "*int8"
C L "usb_flush_out" 6 164 13 "FUNCTION"
V L "endpoint" 6 614 "int8"
V L "tgl" 6 614 "USB_DTS_BIT"
F G "usb_flush_out" 6 614 "void(int8 endpoint,USB_DTS_BIT tgl)"
V L "i" 6 615 "int8"
V L "len" 6 616 "int16"
C L "usb_flush_out" 6 164 1 "FUNCTION"
C L "usb_flush_out" 6 164 1 "FUNCTION"
C L "usb_flush_out" 6 164 1 "FUNCTION"
C L "usb_flush_out" 6 164 1 "FUNCTION"
C L "usb_flush_out" 6 164 1 "FUNCTION"
V L "endpoint" 6 658 "int8"
F G "usb_rx_packet_size" 6 658 "int16(int8 endpoint)"
C L "usb_get_packet_buffer" 6 164 14 "FUNCTION"
V L "endpoint" 6 677 "int8"
V L "ptr" 6 677 "*int8"
V L "max" 6 677 "int16"
F G "usb_get_packet_buffer" 6 677 "int16(int8 endpoint,*int8 ptr,int16 max)"
V L "al" 6 678 "*int8"
V L "st" 6 679 "int8"
V L "i" 6 680 "int16"
C L "usb_get_packet_buffer" 6 164 1 "FUNCTION"
C L "usb_get_packet" 6 164 17 "FUNCTION"
V L "endpoint" 6 722 "int8"
V L "ptr" 6 722 "*int8"
V L "max" 6 722 "int16"
F G "usb_get_packet" 6 722 "int16(int8 endpoint,*int8 ptr,int16 max)"
C L "usb_tbe" 6 164 11 "FUNCTION"
V L "endpoint" 6 742 "int8"
F G "usb_tbe" 6 742 "int8(int8 endpoint,*int8 ptr,int16 max)"
V L "st" 6 743 "int8"
C L "usb_stall_ep" 6 164 12 "FUNCTION"
V L "endpoint" 6 763 "int8"
F G "usb_stall_ep" 6 763 "void(int8 endpoint)" "done"
V L "direction" 6 764 "int1"
C L "usb_unstall_ep" 6 164 9 "FUNCTION"
V L "endpoint" 6 785 "int8"
F G "usb_unstall_ep" 6 785 "void(int8 endpoint)" "done"
V L "direction" 6 786 "int1"
C L "usb_endpoint_stalled" 6 164 14 "FUNCTION"
V L "endpoint" 6 816 "int8"
F G "usb_endpoint_stalled" 6 816 "int8(int8 endpoint)" "done"
V L "direction" 6 817 "int1"
V L "st" 6 818 "int8"
C L "usb_set_address" 6 164 8 "FUNCTION"
V L "address" 6 840 "int8"
F G "usb_set_address" 6 840 "void(int8 address)" "done"
C L "usb_set_configured" 6 164 11 "FUNCTION"
V L "config" 6 863 "int8"
F G "usb_set_configured" 6 863 "void(int8 config)"
V L "en" 6 864 "int8"
V L "addy" 6 865 "int16"
V L "new_uep" 6 866 "int8"
V L "len" 6 867 "int16"
V L "i" 6 868 "int8"
C L "usb_set_configured" 6 164 1 "FUNCTION"
C L "usb_set_configured" 6 164 1 "FUNCTION"
C L "usb_isr" 6 164 13 "FUNCTION"
F G "usb_isr" 6 927 "void()"
C L "usb_isr" 6 164 1 "FUNCTION"
C L "usb_isr" 6 164 1 "FUNCTION"
C L "usb_isr" 6 164 1 "FUNCTION"
C L "usb_isr" 6 164 1 "FUNCTION"
C L "usb_isr" 6 164 1 "FUNCTION"
C L "usb_isr" 6 164 1 "FUNCTION"
C L "usb_isr" 6 164 1 "FUNCTION"
C L "usb_isr" 6 164 1 "FUNCTION"
C L "usb_isr_sof" 6 164 1 "FUNCTION"
F G "usb_isr_sof" 6 951 "void()"
C L "usb_disable_endpoints" 6 164 5 "FUNCTION"
F G "usb_disable_endpoints" 6 962 "void()"
V L "i" 6 963 "int8"
C L "usb_isr_rst" 6 164 6 "FUNCTION"
F G "usb_isr_rst" 6 977 "void()"
C L "usb_isr_rst" 6 164 1 "FUNCTION"
C L "usb_isr_rst" 6 164 1 "FUNCTION"
C L "usb_isr_rst" 6 164 1 "FUNCTION"
C L "usb_init_ep0_setup" 6 164 5 "FUNCTION"
F G "usb_init_ep0_setup" 6 1010 "void()"
C L "usb_init_ep0_setup" 6 164 1 "FUNCTION"
C L "usb_isr_uerr" 6 164 7 "FUNCTION"
F G "usb_isr_uerr" 6 1031 "void()"
C L "usb_isr_uidle" 6 164 5 "FUNCTION"
F G "usb_isr_uidle" 6 1083 "void()"
C L "usb_isr_uidle" 6 164 1 "FUNCTION"
C L "usb_isr_uidle" 6 164 1 "FUNCTION"
C L "usb_isr_uidle" 6 164 1 "FUNCTION"
C L "usb_isr_activity" 6 164 6 "FUNCTION"
F G "usb_isr_activity" 6 1099 "void()"
C L "usb_isr_activity" 6 164 1 "FUNCTION"
C L "usb_isr_activity" 6 164 1 "FUNCTION"
C L "usb_isr_stall" 6 164 5 "FUNCTION"
F G "usb_isr_stall" 6 1113 "void()"
C L "usb_isr_tok_dne" 6 164 13 "FUNCTION"
F G "usb_isr_tok_dne" 6 1138 "void()"
V L "en" 6 1139 "int8"
C L "usb_isr_tok_dne" 6 164 1 "FUNCTION"
C L "usb_isr_tok_dne" 6 164 1 "FUNCTION"
C L "usb_isr_tok_dne" 6 164 3 "FUNCTION"
C L "usb_isr_tok_dne" 6 164 1 "FUNCTION"
C L "usb_isr_tok_dne" 6 164 1 "FUNCTION"
C L "usb_isr_tok_dne" 6 164 1 "FUNCTION"
C L "usb_request_send_response" 6 164 23 "FUNCTION"
V L "len" 6 1221 "int8"
F G "usb_request_send_response" 6 1221 "void(int8 len)"
F G "usb_request_get_data" 6 1225 "void(int8 len)"
F G "usb_request_stall" 6 1229 "void()"
D G "__USB_DESCRIPTORS__" 8 19 ""
V G "USB_CLASS_SPECIFIC_DESC" 8 29 "int8[1]"
V G "USB_CLASS_SPECIFIC_DESC_LOOKUP" 8 56 "int16[1][1]" "config 1"
V G "USB_CLASS_SPECIFIC_DESC_LOOKUP_SIZE" 8 68 "int16[1][1]" "config 1"
D G "USB_TOTAL_CONFIG_LEN" 8 82 "41" "config+interface+class+endpoint+endpoint (2 endpoints)"
V G "USB_CONFIG_DESC" 8 84 "int8[1]" "IN ORDER TO COMPLY WITH WINDOWS HOSTS, THE ORDER OF THIS ARRAY MUST BE:"
D G "USB_NUM_HID_INTERFACES" 8 144 "1"
D G "USB_MAX_NUM_INTERFACES" 8 148 "1"
V G "USB_NUM_INTERFACES" 8 151 "int8[1]"
V G "USB_CLASS_DESCRIPTORS" 8 158 "int16[1][1][1]" "config 1"
V G "USB_DEVICE_DESC" 8 177 "int8[18]" "starts of with device configuration. only one possible"
V G "USB_STRING_DESC_OFFSET" 8 207 "int8[1]"
V G "USB_STRING_DESC" 8 209 "int8[1]" "string 0 = S/N"
D G "__USB_DRIVER__" 9 177 ""
V G "USB_address_pending" 9 189 "int8" "save previous state because packets can take several isrs"
V G "usb_getdesc_ptr" 9 190 "int8"
V G "usb_getdesc_len" 9 190 "int8"
V G "USB_Interface" 9 196 "int8[1]" "config state for all of our interfaces, NUM_INTERFACES defined with descriptors"
D G "usb_kbhit" 9 210 "(x) bit_test(__usb_kbhit_status,x)"
D G "usb_enumerated" 9 221 "() (USB_stack_status.curr_config)"
C L "usb_wait_for_enumeration" 9 190 6 "FUNCTION"
F G "usb_wait_for_enumeration" 9 230 "void()"
C L "usb_puts" 9 190 12 "FUNCTION"
V L "endpoint" 9 247 "int8"
V L "ptr" 9 247 "*int8"
V L "len" 9 247 "int16"
V L "timeout" 9 247 "int8"
F G "usb_puts" 9 247 "int8(int8 endpoint,*int8 ptr,int16 len,int8 timeout)"
V L "i" 9 248 "int16"
V L "res" 9 249 "int1"
V L "this_packet_len" 9 250 "int16"
V L "packet_size" 9 251 "int16"
V L "timeout_1us" 9 252 "int32"
C L "usb_puts" 9 190 1 "FUNCTION"
C L "usb_puts" 9 190 1 "FUNCTION"
C L "usb_puts" 9 190 1 "FUNCTION"
C L "usb_puts" 9 190 1 "FUNCTION"
C L "usb_gets" 9 190 17 "FUNCTION"
V L "endpoint" 9 305 "int8"
V L "ptr" 9 305 "*int8"
V L "max" 9 305 "int16"
V L "timeout" 9 305 "int16"
F G "usb_gets" 9 305 "int8(int8 endpoint,*int8 ptr,int16 max,int16 timeout)"
V L "ret" 9 306 "int16"
V L "to" 9 307 "int16"
V L "len" 9 308 "int16"
V L "packet_size" 9 309 "int16"
V L "this_packet_max" 9 310 "int16"
C L "usb_token_reset" 9 190 9 "FUNCTION"
F G "usb_token_reset" 9 348 "void()"
V L "i" 9 349 "int8"
C L "usb_token_reset" 9 190 1 "FUNCTION"
C L "usb_token_reset" 9 190 1 "FUNCTION"
C L "usb_token_reset" 9 190 1 "FUNCTION"
C L "usb_token_reset" 9 190 1 "FUNCTION"
D G "usb_put_0len_0" 9 375 "() usb_request_send_response(0)"
C L "usb_endpoint_is_valid" 9 190 10 "FUNCTION"
V L "endpoint" 9 389 "int8"
F G "usb_endpoint_is_valid" 9 389 "int8(int8 endpoint)"
V L "direction" 9 390 "int1"
C L "usb_endpoint_is_valid" 9 190 1 "FUNCTION"
C L "usb_endpoint_is_valid" 9 190 1 "FUNCTION"
C L "usb_isr_tok_in_dne" 9 190 16 "FUNCTION"
V L "endpoint" 9 419 "int8"
F G "usb_isr_tok_in_dne" 9 419 "void(int8 endpoint)"
C L "usb_isr_tok_in_dne" 9 190 1 "FUNCTION"
C L "usb_isr_tok_out_dne" 9 190 10 "FUNCTION"
V L "endpoint" 9 442 "int8"
F G "usb_isr_tok_out_dne" 9 442 "void(int8 endpoint)" "TODO:"
C L "usb_isr_tok_setup_dne" 9 190 32 "FUNCTION"
F G "usb_isr_tok_setup_dne" 9 497 "void()"
C L "usb_isr_tok_setup_dne" 9 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 9 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 9 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 9 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 9 190 1 "FUNCTION"
C L "usb_isr_tok_setup_dne" 9 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 9 190 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardDevice" 9 549 "void()"
C L "usb_isr_tkn_setup_StandardDevice" 9 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 9 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 9 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 9 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 9 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 9 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 9 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardDevice" 9 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 9 190 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardInterface" 9 628 "void()"
V L "curr_config" 9 629 "int8"
C L "usb_isr_tkn_setup_StandardInterface" 9 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 9 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 9 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 9 190 1 "FUNCTION"
C L "usb_isr_tkn_setup_StandardInterface" 9 190 3 "FUNCTION"
C L "usb_isr_tkn_setup_StandardEndpoint" 9 190 10 "FUNCTION"
F G "usb_isr_tkn_setup_StandardEndpoint" 9 688 "void()"
C L "usb_isr_tkn_setup_ClassInterface" 9 190 11 "FUNCTION"
F G "usb_isr_tkn_setup_ClassInterface" 9 734 "void()"
C L "usb_Get_Descriptor" 9 190 15 "FUNCTION"
F G "usb_Get_Descriptor" 9 786 "void()"
C L "usb_Get_Descriptor" 9 190 1 "FUNCTION"
C L "usb_Get_Descriptor" 9 190 1 "FUNCTION"
C L "usb_Get_Descriptor" 9 190 1 "FUNCTION"
C L "usb_Get_Descriptor" 9 190 1 "FUNCTION"
C L "usb_Get_Descriptor" 9 190 1 "FUNCTION"
C L "usb_Get_Descriptor" 9 190 1 "FUNCTION"
C L "usb_finish_set_address" 9 190 11 "FUNCTION"
F G "usb_finish_set_address" 9 857 "void()"
C L "usb_finish_set_address" 9 190 1 "FUNCTION"
C L "usb_finish_set_address" 9 190 1 "FUNCTION"
C L "usb_copy_desc_seg_to_ep" 9 190 3 "FUNCTION"
F G "usb_copy_desc_seg_to_ep" 9 874 "void()"
V L "i" 9 875 "int8"
V L "c" 9 876 "int8"
D G "MOTOR_DRIVE" 0 34 "PIN_A4" "Motor: on = 1 off = 0"
D G "MOTOR_DIR" 0 35 "PIN_A5" "Direction: Forward=0 Reverse=1"
D G "LED_DF" 0 36 "PIN_B4" "Turn the Darkfield LED on"
D G "LED_WHITE" 0 37 "PIN_B5" "Turn the White LED on"
D G "LED_RED" 0 38 "PIN_C2" "Turn the Red LED on"
D G "LED_GREEN" 0 39 "PIN_C1" "Turn the Green LED on"
D G "LED_BLUE" 0 40 "PIN_C0" "Turn the Blue LED on"
D G "MOTOR_DELAY" 0 41 "10" "number of ms to delay per for loop"
C L "ExecuteCmd" 0 43 1 "FUNCTION"
F G "ExecuteCmd" 0 44 "void()"
V L "n" 0 45 "int8"
F G "DriveMotor" 0 45 "void(int8 n)"
F G "TurnLEDsOff" 0 46 "void()" "Global Variables"
V G "command" 0 49 "int8[64]" "command received from system (via usb)"
V G "LEDStatus" 0 50 "int8" "byte that holds LED on/off status"
C L "TurnLEDsOff" 0 43 6 "FUNCTION"
F G "MAIN" 0 59 "void()"
C L "MAIN" 0 43 1 "FUNCTION"
C L "MAIN" 0 43 1 "FUNCTION"
C L "ExecuteCmd" 0 43 1 "FUNCTION"
F G "ExecuteCmd" 0 83 "void()"
V L "n" 0 84 "int8"
C L "ExecuteCmd" 0 43 1 "FUNCTION"
C L "ExecuteCmd" 0 43 1 "FUNCTION"
C L "ExecuteCmd" 0 43 1 "FUNCTION"
C L "ExecuteCmd" 0 43 1 "FUNCTION"
C L "ExecuteCmd" 0 43 1 "FUNCTION"
C L "TurnLEDsOff" 0 43 1 "FUNCTION"
F G "TurnLEDsOff" 0 179 "void()"
V L "n" 0 188 "int8"
F G "DriveMotor" 0 189 "void(int8 n)"
V L "i" 0 190 "int8"
C L "DriveMotor" 0 43 1 "FUNCTION"
C L "DriveMotor" 0 43 1 "FUNCTION"
C L "DriveMotor" 0 43 1 "FUNCTION"
C L "DriveMotor" 0 43 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_vref" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
